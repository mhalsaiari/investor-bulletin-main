version: "3.9"

networks:
  internal_nw:
    name: internal_nw
    driver: bridge

services:
  database:
    container_name: database-node
    image: cockroachdb/cockroach:v22.2.0
    command: start-single-node --insecure --http-addr 0.0.0.0
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "26257:26257"
      - "8080:8080"
    networks:
      - internal_nw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 5s
      timeout: 5s
      retries: 10

  broker:
    image: rabbitmq:3.8-management
    container_name: rabbitmq-node
    hostname: broker
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - "./config/test_setup.sh:/dev/test_setup.sh"
      - "./config/definitions.json:/etc/rabbitmq/definitions.json"
      - "./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_NODE_IP_ADDRESS=0.0.0.0
      - NODE_IP_ADDRESS=0.0.0.0
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit loopback_users "none"
      - RABBITMQ_LOAD_DEFINITIONS=true
    command: >
      sh -c "rabbitmq-server"
    networks:
      - internal_nw
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application services
  api:
    container_name: fastAPI-server
    image: investor-bulletin-api
    build:
      context: ../phase_3/investor_bulletin
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    depends_on:
      - database
    networks:
      - internal_nw

  worker:
    container_name: worker-server
    image: investor-bulletin-worker
    build:
      context: ../phase_3/investor_bulletin
      dockerfile: Dockerfile
    command: celery -A worker.app worker --beat --loglevel=info
    env_file:
      - ../.env
    depends_on:
      - api
      - broker
    networks:
      - internal_nw

  event_subscriber:
    container_name: subscriber-server
    image: investor-bulletin-event-sub
    build:
      context: ../phase_3/investor_bulletin
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
    command: sh -c "python event_subscriber/main.py"
    env_file:
      - ../.env
    depends_on:
      - database
      - broker
    networks:
      - internal_nw
